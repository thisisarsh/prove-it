image: docker:19.03.12
services:
  - docker:19.03.12-dind

stages:
  - build
  - test
  - release
  - deploy

variables:
  CONTAINER_TEST_IMAGE: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
  CONTAINER_RELEASE_IMAGE: $CI_REGISTRY_IMAGE:prod

.before_script_template:
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY

build-job:
  extends: .before_script_template
  stage: build
  script:
    - docker build --pull -t $CONTAINER_TEST_IMAGE .
    - docker push $CONTAINER_TEST_IMAGE

#test:
#  stage: test
#  image: node:14
#  script:
#    - npm install
#    - npm run test
#    - npm run build
#  environment: development

release-image:
  extends: .before_script_template
  stage: release
  rules:
    - if: '$CI_COMMIT_REF_NAME == "develop"'
  only:
    - merge_requests
  script:
    - docker pull $CONTAINER_TEST_IMAGE
    - docker tag $CONTAINER_TEST_IMAGE $CONTAINER_RELEASE_IMAGE
    - docker push $CONTAINER_RELEASE_IMAGE

deploy_staging:
  stage: deploy
  rules:
    - if: '$CI_COMMIT_REF_NAME == "develop"'
  only:
    - merge_requests
  image: quay.io/openshift/origin-cli
  script:
    - wget https://github.com/mikefarah/yq/releases/download/v4.20.1/yq_linux_amd64 -O /usr/bin/yq && chmod +x /usr/bin/yq
    - export IMAGE=$CONTAINER_RELEASE_IMAGE
    - export COMMIT_ID=$CI_COMMIT_SHORT_SHA
    - export APP_NAME=ht-web-$CI_COMMIT_SHORT_SHA
    - yq -i '.spec.template.spec.containers[0].image = strenv(IMAGE)' k8s/deployment.yaml
    - yq -i '.metadata.name = strenv(APP_NAME)' k8s/deployment.yaml
    - yq -i '.spec.selector.matchLabels.deployment = strenv(APP_NAME)' k8s/deployment.yaml
    - yq -i '.spec.template.metadata.labels.deployment = strenv(APP_NAME)' k8s/deployment.yaml
    - yq -i '.spec.template.spec.containers[0].name = strenv(APP_NAME)' k8s/deployment.yaml
    - oc login --token=$OCP_TOKEN --server=$OCP_API_SERVER --insecure-skip-tls-verify
    - oc project ht-coop
    - RESULT=0
    - oc scale deployment -l app.kubernetes.io/instance=ht-website --replicas=0 2> /dev/null || RESULT=$?
    - echo $RESULT
    - (if [ "$RESULT" == 1 ]; then
      exit 0;
      fi);
    - oc apply -f k8s
  environment: development

deploy-prod:
  image: quay.io/openshift/origin-cli
  stage: deploy
  rules:
    - if: '$CI_COMMIT_REF_NAME == "main"'
  only:
    - merge_requests
  script:
    - wget https://github.com/mikefarah/yq/releases/download/v4.20.1/yq_linux_amd64 -O /usr/bin/yq && chmod +x /usr/bin/yq
    - export IMAGE=$CONTAINER_RELEASE_IMAGE
    - export APP_NAME=ht-web-react
    - yq -i '.spec.template.spec.containers[0].image = strenv(IMAGE)' k8s/deployment.yaml
    - yq -i '.metadata.name = strenv(APP_NAME)' k8s/deployment.yaml
    - yq -i '.spec.selector.matchLabels.deployment = strenv(APP_NAME)' k8s/deployment.yaml
    - yq -i '.spec.template.metadata.labels.deployment = strenv(APP_NAME)' k8s/deployment.yaml
    - yq -i '.spec.template.spec.containers[0].name = strenv(APP_NAME)' k8s/deployment.yaml
    - oc login --token=$OCP_TOKEN --server=$OCP_API_SERVER --insecure-skip-tls-verify
    - oc project ht-coop
    - RESULT=0
    - oc scale deployment -l app.kubernetes.io/instance=ht-website --replicas=0 2> /dev/null || RESULT=$?
    - echo $RESULT
    - (if [ "$RESULT" == 1 ]; then
      exit 0;
      fi);
    - oc apply -f k8s
  environment: production
