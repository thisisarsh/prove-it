image: docker:19.03.12
services:
  - docker:19.03.12-dind

stages:
  - build
  - test  
  - release 
  - deploy

variables:
  # Use TLS https://docs.gitlab.com/ee/ci/docker/using_docker_build.html#tls-enabled
  DOCKER_HOST: tcp://docker:2376
  DOCKER_TLS_CERTDIR: "/certs"
  CONTAINER_TEST_IMAGE: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
  CONTAINER_RELEASE_IMAGE: $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA

.before_script_template:
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY

build:
  extends: .before_script_template
  stage: build
  script:
    - docker build --pull -t $CONTAINER_TEST_IMAGE .
    - docker push $CONTAINER_TEST_IMAGE
  only:
    - main

# integration_test:
#   extends: .before_script_template
#   stage: test
#   script:
#     - docker pull $CONTAINER_TEST_IMAGE
#     - docker run $CONTAINER_TEST_IMAGE cat /var/www/html/index.html
#   only:
#     - main

# smoke_test:
#   extends: .before_script_template
#   stage: test
#   script:
#     - docker pull $CONTAINER_TEST_IMAGE
#     - docker run $CONTAINER_TEST_IMAGE cat /var/www/html/index.html
#   only:
#     - main

release-image:
  extends: .before_script_template
  stage: release
  script:
    - docker pull $CONTAINER_TEST_IMAGE
    - docker tag $CONTAINER_TEST_IMAGE $CONTAINER_RELEASE_IMAGE
    - docker push $CONTAINER_RELEASE_IMAGE
  only:
    - main

deploy:
  image: quay.io/openshift/origin-cli
  stage: deploy 
  script:
    - wget https://github.com/mikefarah/yq/releases/download/v4.20.1/yq_linux_amd64 -O /usr/bin/yq && chmod +x /usr/bin/yq
    - export IMAGE=$CONTAINER_RELEASE_IMAGE
    - export COMMIT_ID=$CI_COMMIT_SHORT_SHA
    - export APP_NAME=ht-website-$CI_COMMIT_SHORT_SHA
    - yq -i '.spec.template.spec.containers[0].image = strenv(IMAGE)' k8s/deployment.yaml
    - yq -i '.metadata.name = strenv(APP_NAME)' k8s/deployment.yaml
    - yq -i '.spec.selector.matchLabels.deployment = strenv(APP_NAME)' k8s/deployment.yaml
    - yq -i '.spec.template.metadata.labels.deployment = strenv(APP_NAME)' k8s/deployment.yaml
    - yq -i '.spec.template.spec.containers[0].name = strenv(APP_NAME)' k8s/deployment.yaml
    # - cat k8s/deployment.yaml
    - oc login --token=$OCP_TOKEN --server=$OCP_API_SERVER --insecure-skip-tls-verify
    - oc project ht-project 
    - RESULT=0
    - oc scale deployment -l app.kubernetes.io/instance=ht-website --replicas=0 2> /dev/null || RESULT=$?
    - echo $RESULT
    - (if [ "$RESULT" == 1 ]; then
            exit 0;
      fi);
    - oc apply -f k8s
  only:
    - main
